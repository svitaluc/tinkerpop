////
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
////
= Processed Result Logging

Processed Result Logging enables to perform an additional operation on
a result of a query and to log the outcome of this additional operation.

In order to successfully log an outcome of an additional operation, logging
of the operation must be supported. A list of supported methods is part of
this readme.
Logging of not yet supported method can be implemented extending the interface
of ProcessedResultLogger.

It is possible to use a provided format or to create a custom implementation of
a format in order to log various type of information. A list of provided formats
is part of this readme. A new format can be implemented extending an interface
of ProcessedResultFormat.


== List of currently supported methods

Currently supported methods for processing a result are:

[.result]
====
* path
====

== Settings

In order to set a processed result logging corresponding options must be
set in a yaml configuration file.

The configuration file to be adjusted is `conf/gremlin-server.yaml`.

=== method
A required property determining the method to be run on a result is

`processedResultLog.method`.

Argument of the `method`
property is a name of the method to be run on a query result. The method name
must match a provided method from the List of currently provided methods.


=== format
An optional property setting for log format is

`processedResultLog.format`

Possible values are:

[.result]
====
* basic
* enhanced (default)
* ipo
* all
====

==== basic
Basic format is logging only a processed result without any other piece of information.
No errors are logged neither - only successful processed results are logged.
This type of format is thus suited for the case when the processedResultLog is logged
into a separate file.

_Example of basic format output_

 v[1], e[7][1-knows->2], v[2], vadas
 v[1], e[8][1-knows->4], v[4], josh

==== info
Info format


== Example

