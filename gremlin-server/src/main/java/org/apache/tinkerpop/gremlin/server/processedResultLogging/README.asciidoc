////
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
////
= Processed Result Logging

Processed Result Logging enables to silently perform an additional operation on
a result of a query and to log the outcome of this additional operation in a
predefined format.

In order to successfully log an outcome of an additional operation, the operation
must be supported for processed result logging. A <<List of supported methods>>
is part of
this readme, but it is not difficult to extend a specific interface with another
method (for further information see section <<For Developers>>).

It is possible to use a provided format or to create a custom implementation of
a format in order to log various type of information. A <<List of provided formats>>
is part of this readme.

For business purposes a method can provide an anonymized log of the processed result,
so that the sensitive data wouldn't be exposed.
The <<List of supported methods>> contains the information if the method
supports anonymous logging or not.


== List of supported methods

Currently supported methods for processing a result, their full processor names and
if they support anonymized logging:

[.result]
====
* path
  ** - org.apache.tinkerpop.gremlin.server.processedResultLogging.processor.PathProcessor
  ** - supports anonymized logging
====

For detailed information see section <<Methods>>.

== List of provided formats

Currently supported formats for processed result logging are:

[.result]
====
* basic
  *** - org.apache.tinkerpop.gremlin.server.processedResultLogging.formatter.BasicProcessedResultFormatter`
* query
====

For description of the formats see section <<Formats>>.

== Settings

In order to set a processed result logging, corresponding options must be
set in a yaml configuration file.

The configuration file to be adjusted is `conf/gremlin-server.yaml`.

=== enabled
A required property when you want to use Processed Result Logging is
the property

`processedResultLog.enabled`

`default value: false`

If you want to log processed results, the `enabled` property must be set to `true`.

=== processor
An optional property determining the method to be run on a result is

`processedResultLog.processor`

`default value: org.apache.tinkerpop.gremlin.server.processedResultLogging.processor.PathProcessor`

Argument of the `processor`
property is the full name name of a class providing the processed result logging.
So it is a class implementing the ResultProcessor interface.


=== format
An optional property setting a log format is

`processedResultLog.format`

`default value: org.apache.tinkerpop.gremlin.server.processedResultLogging.formatter.BasicProcessedResultFormatter`

See the <<List of provided formats>> and <<Formats>> section

=== anonymized
An optional property setting an anonymized log is

`processedResultLog.anonymized`

`default value: false`

An anonymized log shouldn't contain any specific information about data stored in
the graph.

== Methods

=== path
If a query results is of a GraphTraversal type, a path method is performed on the
result and its outcome is logged.
For description of the path step see
link:http://tinkerpop.apache.org/docs/current/reference/#path-step[Documentation].

Example of a pure path output: +
`v[1], e[7][1-knows->2], v[2], vadas`

==== anonymized
An anonymized version of a path method produces output without the last result.

Example of a pure path output in anonymized mode: +
`v[1], e[7][1-knows->2], v[2]`

== Formats

=== basic
Basic format is logging only a processed result without any other piece of information.
This type of forg.apache.tinkerpop.gremlin.server.processedResultLogging.processor.PathProcessor`
format is thus suited for the case when the processedResultLog is logged
into a separate file.

_Example of basic format output_

 v[1], e[7][1-knows->2], v[2], vadas
 v[1], e[8][1-knows->4], v[4], josh

==== info
Info format


== Example

